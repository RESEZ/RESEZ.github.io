{"title":"js获取元素绝对位置","slug":"js获取元素绝对位置","date":"2017-03-20T11:30:50.000Z","updated":"2017-09-23T09:13:26.652Z","comments":true,"excerpt":"<p>众：哇！不会吧！博主你这都不会！</p>\n<p>我：我…我还真的不会。</p>","content":"<p>众：哇！不会吧！博主你这都不会！</p>\n<p>我：我…我还真的不会。</p>\n<a id=\"more\"></a>\n<p>今天搞事情想搞个react动画框架。需要获取元素的绝对位置。</p>\n<p>百度： <span style=\"font-size:12px;color:#888\">不要和我说google 一样的货色</span></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//获取元素的纵坐标 </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getTop</span>(<span class=\"params\">e</span>)</span>&#123; </div><div class=\"line\">  <span class=\"keyword\">var</span> offset=e.offsetTop; </div><div class=\"line\">  <span class=\"keyword\">if</span>(e.offsetParent!=<span class=\"literal\">null</span>) offset+=getTop(e.offsetParent); </div><div class=\"line\">  <span class=\"keyword\">return</span> offset; </div><div class=\"line\">&#125; </div><div class=\"line\"><span class=\"comment\">//获取元素的横坐标 </span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getLeft</span>(<span class=\"params\">e</span>)</span>&#123; </div><div class=\"line\">  <span class=\"keyword\">var</span> offset=e.offsetLeft; </div><div class=\"line\">  <span class=\"keyword\">if</span>(e.offsetParent!=<span class=\"literal\">null</span>) offset+=getLeft(e.offsetParent); </div><div class=\"line\">  <span class=\"keyword\">return</span> offset; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>嗯 很合理嘛 Element.offsetTop + 递归。</p>\n<p>可偶然发现这是获取元素在文档流中的位置，但 transform 属性是不会改变文档流中的位置的。好，我们换一个方法。结果百度 google翻了几页都是这一个方法</p>\n<p><img src=\"/img/表情/喷.png\" alt=\"\"></p>\n<p>继续寻找，突然想到jq，试了一下jq的offset方法，完美支持 transform 属性，mmp。</p>\n<p>经查看jq源码，方法如下：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div></pre></td><td class=\"code\"><pre><div class=\"line\">offset: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> options </span>) </span>&#123;</div><div class=\"line\">  <span class=\"comment\">// Preserve chaining for setter</span></div><div class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">arguments</span>.length ) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> options === <span class=\"literal\">undefined</span> ?</div><div class=\"line\">      <span class=\"keyword\">this</span> :</div><div class=\"line\">      <span class=\"keyword\">this</span>.each( <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"> i </span>) </span>&#123;</div><div class=\"line\">        jQuery.offset.setOffset( <span class=\"keyword\">this</span>, options, i );</div><div class=\"line\">      &#125; );</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">var</span> doc, docElem, rect, win,</div><div class=\"line\">    elem = <span class=\"keyword\">this</span>[ <span class=\"number\">0</span> ];</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">if</span> ( !elem ) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span>;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"comment\">// Return zeros for disconnected and hidden (display: none) elements (gh-2310)</span></div><div class=\"line\">  <span class=\"comment\">// Support: IE &lt;=11 only</span></div><div class=\"line\">  <span class=\"comment\">// Running getBoundingClientRect on a</span></div><div class=\"line\">  <span class=\"comment\">// disconnected node in IE throws an error</span></div><div class=\"line\">  <span class=\"keyword\">if</span> ( !elem.getClientRects().length ) &#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123; <span class=\"attr\">top</span>: <span class=\"number\">0</span>, <span class=\"attr\">left</span>: <span class=\"number\">0</span> &#125;;</div><div class=\"line\">  &#125;</div><div class=\"line\"></div><div class=\"line\">  rect = elem.getBoundingClientRect();</div><div class=\"line\"></div><div class=\"line\">  doc = elem.ownerDocument;</div><div class=\"line\">  docElem = doc.documentElement;</div><div class=\"line\">  win = doc.defaultView;</div><div class=\"line\"></div><div class=\"line\">  <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">    top: rect.top + win.pageYOffset - docElem.clientTop,</div><div class=\"line\">    left: rect.left + win.pageXOffset - docElem.clientLeft</div><div class=\"line\">  &#125;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>查阅mdn的 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Range/getBoundingClientRect\" target=\"_blank\" rel=\"external\">getBoundingClientRect()</a> 词条。</p>\n<blockquote>\n<p>Range.getBoundingClientRect() 返回一个 ClientRect 对象，该对象限定了选定的文档对象的内容，该方法返回了一个矩形，这个矩形包围了该文档对象中所有元素的边界矩形集合（译者注：关于边界矩形可以参考 <a href=\"http://en.wikipedia.org/wiki/Minimum_bounding_rectangle\" target=\"_blank\" rel=\"external\">Minimum Bouding Rectangles</a>）。 </p>\n</blockquote>\n<p>以及 <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Element/getClientRects#Syntax\" target=\"_blank\" rel=\"external\">getClientRects()</a></p>\n<blockquote>\n<p>返回值是ClientRect对象集合，该对象是与该元素相关的CSS边框。每个ClientRect对象包含一组描述该边框的只读属性——left、top、right和bottom，单位为像素，<strong>这些属性值是相对于视口的top-left的。</strong>即使当表格的标题在表格的边框外面，该标题仍会被计算在内。</p>\n</blockquote>\n<p>注意上文的 <code>这些属性值是相对于视口的top-left的。</code> 也就是说算出元素在页面的绝对位置还有加上视口滚动的距离。</p>\n<p>所以jq的实现就是：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&#123;</div><div class=\"line\">  top: 元素顶部到视口顶部 + 视口到页面顶部 - 文档偏移</div><div class=\"line\">  left: 元素左侧到视口左侧 + 视口到页面左侧 - 文档偏移</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p><span style=\"font-size:12px;color:#888\">封面画师: <a href=\"http://www.pixiv.net/member.php?id=3273478\" target=\"_blank\" rel=\"external\">squidsmith</a></span></p>\n","thumbnail":"/img/二次元/源氏半藏.jpg","primarycolor":"deepPurple","accentcolor":"lightBlue","categories":[{"name":"技术","path":"api/categories/技术.json"}],"tags":[{"name":"技术","path":"api/tags/技术.json"},{"name":"js","path":"api/tags/js.json"},{"name":"html","path":"api/tags/html.json"}]}